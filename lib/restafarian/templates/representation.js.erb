(function() {
  "use strict";
  var persisted  = <%= object.persisted? %>;
  var errors     = <%= error_messages %>;
  var validators = { <%= validators %>  };
  var errorFormatter = function(error, params, options) {
    var message = errors[error];
    return message.replace(/%{(\w+)}/, function(match, capture) {
      return options[params[capture]];
    });
  };
  var resource = {
    label: "<%= object_name %>",
    properties: <%= typed_properties %>,
    validate: function(representation) {
      var errors = {};

      for(var property in this.properties) {
        errors[property] = [];

        for(var validator in this.properties[property].validators) {
          if(!validators[validator]) continue;

          var options = this.properties[property].validators[validator];
          var error   = validators[validator].call(representation, property, options);

          if(error) {
            error.push(options);
            var message = options.message || errorFormatter.apply(this, error);
            errors[property].push(message);
          }
        }
      }

      return errors;
    }
  };
  return resource;
})();
