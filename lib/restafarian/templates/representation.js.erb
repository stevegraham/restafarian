(function() {
  "use strict";
  var validators = { <%= validators %>  };
  var fmt = function(error) {
    return error[0].replace(/%{(\w+)}/, function(match, capture) {
      return error[1][capture];
    });
  };
  var resource = {
    label: "<%= object_name %>",
    properties: <%= typed_properties %>,
    validate: function(representation) {
      var errors = {};

      for(var property in this.properties) {
        errors[property] = [];

        for(var validator in this.properties[property].validators) {
          if(!validators[validator]) continue;

          var options = this.properties[property].validators[validator];
          var error = validators[validator].call(representation, property, options);

          var defaults = {
            attribute: property,
            value: representation[property],
            model: this.label
          };

          if(error) {
            for(var key in defaults) error[1][key] = defaults[key];
            errors[property].push(fmt(error));
          }
        }
      }

      return errors;
    }
  };
  return resource;
})();
